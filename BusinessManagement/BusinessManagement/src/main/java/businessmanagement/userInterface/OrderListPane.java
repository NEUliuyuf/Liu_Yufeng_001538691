/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package businessmanagement.userInterface;

import businessmanagement.Business.Business;
import businessmanagement.CustomerManagement.CustomerProfile;
import businessmanagement.OrderManagement.Order;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 43999
 */
public class OrderListPane extends javax.swing.JPanel {

    /**
     * Creates new form OrderListPane
     */
    Order order;
    Business business;
    
    public OrderListPane(Business b) {
        initComponents();
        business = b;
        populate();
        refreshPriceCompare();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        OrderListTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        SearchOrderNumberInputText = new javax.swing.JTextField();
        DeleteOrderButton = new javax.swing.JButton();
        SearchOrderButton = new javax.swing.JButton();
        RefreshButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        BudleRetailCompareText = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jLabel1.setText("Order List");

        OrderListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order Number", "Customer", "Purchased", "Price", "Market", "Channel", "Is Bundle"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(OrderListTable);

        jLabel2.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel2.setText("Search an order by order number or Customer: ");

        SearchOrderNumberInputText.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        SearchOrderNumberInputText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchOrderNumberInputTextActionPerformed(evt);
            }
        });

        DeleteOrderButton.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        DeleteOrderButton.setText("Delete Order");
        DeleteOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteOrderButtonActionPerformed(evt);
            }
        });

        SearchOrderButton.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        SearchOrderButton.setText("Search Order");
        SearchOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchOrderButtonActionPerformed(evt);
            }
        });

        RefreshButton.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        RefreshButton.setText("Refresh");
        RefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Bundle price - Retail price:");

        BudleRetailCompareText.setEditable(false);
        BudleRetailCompareText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BudleRetailCompareTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 567, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(SearchOrderNumberInputText)
                                .addGap(66, 66, 66))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(219, 219, 219)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(RefreshButton)
                        .addGap(48, 48, 48)
                        .addComponent(DeleteOrderButton)
                        .addGap(84, 84, 84)
                        .addComponent(SearchOrderButton)
                        .addGap(23, 23, 23))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BudleRetailCompareText, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(BudleRetailCompareText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SearchOrderNumberInputText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeleteOrderButton)
                    .addComponent(SearchOrderButton)
                    .addComponent(RefreshButton))
                .addGap(33, 33, 33))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SearchOrderNumberInputTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchOrderNumberInputTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchOrderNumberInputTextActionPerformed

    private void populate(){
        DefaultTableModel dtm = (DefaultTableModel) OrderListTable.getModel();
        dtm.setRowCount(0);
        for(Order o : business.mo.getMasterOrderList()){
            Object[] row = new Object[7];
            row[0] = o;
            row[1] = o.getCustomerProfile();
            if(o.getSolutionOffer() != null){
                row[2] = o.getSolutionOffer();
                row[3] = o.getSolutionOffer().getPrice();
                row[6] = "True";
            }else{
                row[2] = o.getProduct();
                row[3] = o.getProduct().getPrice();
                row[6] = "False";
            }
            row[4] = o.getMarket();
            row[5] = o.getChannel();
            
            dtm.addRow(row);
            
        }
    }
    private void DeleteOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteOrderButtonActionPerformed
        // TODO add your handling code here:
        int Row = OrderListTable.getSelectedRow();
        order = (Order) OrderListTable.getValueAt(Row, 0);
        CustomerProfile cp = (CustomerProfile) OrderListTable.getValueAt(Row, 1);
        business.mo.deletOrder(order);
        cp.getOrderList().deletOrder(order);
        populate();
    }//GEN-LAST:event_DeleteOrderButtonActionPerformed

    private void SearchOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchOrderButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) OrderListTable.getModel();
        dtm.setRowCount(0);
        String search = SearchOrderNumberInputText.getText();
        boolean isCustomer = false;
        isCustomer = !search.matches(".*\\d{1,}.*");
        if (isCustomer){
            for(Order o : business.mo.getMasterOrderList()){
                if(o.getCustomerProfile().getPerson().getName().equals(search)){
                    Object[] row = new Object[6];
                    row[0] = o; 
                    row[1] = o.getCustomerProfile();
                    if(o.getSolutionOffer() != null){
                        row[2] = o.getSolutionOffer();
                        row[3] = o.getSolutionOffer().getPrice();
                    }else{
                        row[2] = o.getProduct();
                        row[3] = o.getProduct().getPrice();
                    }
                    row[4] = o.getMarket();
                    row[5] = o.getChannel();

                    dtm.addRow(row);
                }
            }
        }else{
            for(Order o : business.mo.getMasterOrderList()){
                if(String.valueOf(o.getNumber()).equals(search)){
                    Object[] row = new Object[6];
                    row[0] = o;
                    row[1] = o.getCustomerProfile();
                    if(o.getSolutionOffer() != null){
                        row[2] = o.getSolutionOffer();
                        row[3] = o.getSolutionOffer().getPrice();
                    }else{
                        row[2] = o.getProduct();
                        row[3] = o.getProduct().getPrice();
                    }
                    row[4] = o.getMarket();
                    row[5] = o.getChannel();

                    dtm.addRow(row);
                }

            }
        }
    }//GEN-LAST:event_SearchOrderButtonActionPerformed

    private void RefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshButtonActionPerformed
        // TODO add your handling code here:
        populate();
        refreshPriceCompare();
    }//GEN-LAST:event_RefreshButtonActionPerformed

    private void BudleRetailCompareTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BudleRetailCompareTextActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_BudleRetailCompareTextActionPerformed
    
    private void refreshPriceCompare(){
        double bundlePriceTotal = 0;
        double retailPriceTotal = 0;
        
        for(Order order : business.mo.getMasterOrderList()){
            if(order.getSolutionOffer() != null){
                bundlePriceTotal += order.getSolutionOffer().getPrice();
                retailPriceTotal += order.getRetailPrice();
            }
        }
        double difference = bundlePriceTotal - retailPriceTotal;
        difference = (double) Math.round(difference * 100) / 100;
        BudleRetailCompareText.setText("$" + difference);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BudleRetailCompareText;
    private javax.swing.JButton DeleteOrderButton;
    private javax.swing.JTable OrderListTable;
    private javax.swing.JButton RefreshButton;
    private javax.swing.JButton SearchOrderButton;
    private javax.swing.JTextField SearchOrderNumberInputText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
