/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package businessmanagement.userInterface;

import businessmanagement.Business.Business;
import businessmanagement.CustomerManagement.CustomerAccount;
import businessmanagement.CustomerManagement.CustomerProfile;
import businessmanagement.MarketModel.Market;
import businessmanagement.Personnel.EmployeeProfile;
import businessmanagement.Personnel.Person;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 43999
 */

public class PersonDirectoryPane extends javax.swing.JPanel {

    /**
     * Creates new form PersonDirectoryPane
     */
    Business business;
    int customerID = 1;
    int employeeID = 1;
    public PersonDirectoryPane(Business b) {
        initComponents();
        business = b;
        populateCustomer();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CustomerTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        EmployeeTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        NameInputText = new javax.swing.JTextField();
        DateOfBirthInputText = new javax.swing.JTextField();
        MarketInputText = new javax.swing.JTextField();
        AddToCustomerButton = new javax.swing.JButton();
        DeleteCustomerButton = new javax.swing.JButton();
        AddTOEmployeeButton = new javax.swing.JButton();
        DeleteEmployeeButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jLabel1.setText("Person Directory");

        jLabel2.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel2.setText("Customers:");

        jLabel3.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel3.setText("Employees:");

        CustomerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "ID", "DOB", "Market"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(CustomerTable);

        EmployeeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Employee ID", "DOB"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(EmployeeTable);

        jLabel4.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel4.setText("Name: ");

        jLabel5.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel5.setText("Date of Birth: ");

        jLabel6.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel6.setText("Market: ");

        NameInputText.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        NameInputText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameInputTextActionPerformed(evt);
            }
        });

        DateOfBirthInputText.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        DateOfBirthInputText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateOfBirthInputTextActionPerformed(evt);
            }
        });

        MarketInputText.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        MarketInputText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarketInputTextActionPerformed(evt);
            }
        });

        AddToCustomerButton.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        AddToCustomerButton.setText("Add to Customer");
        AddToCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddToCustomerButtonActionPerformed(evt);
            }
        });

        DeleteCustomerButton.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        DeleteCustomerButton.setText("Delete Customer");
        DeleteCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteCustomerButtonActionPerformed(evt);
            }
        });

        AddTOEmployeeButton.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        AddTOEmployeeButton.setText("Add to Employee");
        AddTOEmployeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddTOEmployeeButtonActionPerformed(evt);
            }
        });

        DeleteEmployeeButton.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        DeleteEmployeeButton.setText("Delete Employee");
        DeleteEmployeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteEmployeeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(179, 179, 179)))
                .addGap(37, 37, 37))
            .addGroup(layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(DeleteCustomerButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(DeleteEmployeeButton))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(AddToCustomerButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(AddTOEmployeeButton)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(DateOfBirthInputText, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MarketInputText, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NameInputText, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(NameInputText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(DateOfBirthInputText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(MarketInputText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddToCustomerButton)
                    .addComponent(AddTOEmployeeButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeleteCustomerButton)
                    .addComponent(DeleteEmployeeButton))
                .addContainerGap(34, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void NameInputTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameInputTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameInputTextActionPerformed

    private void DateOfBirthInputTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateOfBirthInputTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DateOfBirthInputTextActionPerformed

    private void MarketInputTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarketInputTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MarketInputTextActionPerformed

    private void AddToCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddToCustomerButtonActionPerformed
        // TODO add your handling code here:
        String name = NameInputText.getText();
        String dob = DateOfBirthInputText.getText();
        String marketStr =  MarketInputText.getText();
        boolean addS = false;
        for(Market market: business.ml.getMarketList()){
            if(market.getArea().equals(marketStr)){
                Person person = new Person(name,dob);
                CustomerProfile cp = new CustomerProfile(person,market);
                CustomerAccount ca = new CustomerAccount(cp.getPerson().getName(),cp.getPerson().getBirthday());
                cp.setCustomerAccount(ca);
                market.addPerson();
                business.cd.newCustomer(cp);
                business.pd.addPerson(person);
                
                addS = true;
                JOptionPane.showMessageDialog(null,"Register successful, UserName: " + name + ", Password: " + cp.getPerson().getBirthday());
                populateCustomer();
            }
        }
        if(addS == false){
            JOptionPane.showMessageDialog(null,"No exsit market!");
        }
        
    }//GEN-LAST:event_AddToCustomerButtonActionPerformed
    
    private void populateCustomer(){
        DefaultTableModel dtm = (DefaultTableModel) CustomerTable.getModel();
        dtm.setRowCount(0);
        for(CustomerProfile customer :business.cd.getCustomers()){
            Object[] row = new Object[4];
            row[0] = customer;
            row[1] = customer.getCustomerID();
            row[2] = customer.getPerson().getBirthday();
            row[3] = customer.getMarket();
            dtm.addRow(row);
            
        }
    }
    
    
    private void DeleteCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteCustomerButtonActionPerformed
        // TODO add your handling code here:
        int row = CustomerTable.getSelectedRow();
        if(row >= 0){
            CustomerProfile customer = (CustomerProfile)CustomerTable.getValueAt(row, 0);
            business.cd.deletCustomer(customer);
            business.pd.deletePerson(customer.getPerson());
            populateCustomer();
        }else{
            JOptionPane.showMessageDialog(null,"Select a customer!");
        }
    }//GEN-LAST:event_DeleteCustomerButtonActionPerformed

    private void populateEmployee(){
        DefaultTableModel dtm = (DefaultTableModel) EmployeeTable.getModel();
        dtm.setRowCount(0);
        for(EmployeeProfile employee :business.ed.getEmployees()){
            Object[] row = new Object[3];
            row[0] = employee;
            row[1] = employee.getEmployeeID();
            row[2] = employee.getPerson().getBirthday();
            dtm.addRow(row);
        }
    }
    private void AddTOEmployeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddTOEmployeeButtonActionPerformed
        // TODO add your handling code here:
        String name = NameInputText.getText();
        String dob = DateOfBirthInputText.getText();
        Person person = new Person(name,dob);
        EmployeeProfile ep = new EmployeeProfile(person,employeeID);
        employeeID += 1;
        business.ed.addEmployee(ep);
        business.pd.addPerson(person);
        populateEmployee();
        
    }//GEN-LAST:event_AddTOEmployeeButtonActionPerformed

    private void DeleteEmployeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteEmployeeButtonActionPerformed
        // TODO add your handling code here:
        int row = EmployeeTable.getSelectedRow();
        if(row >= 0){
            EmployeeProfile e = (EmployeeProfile)EmployeeTable.getValueAt(row, 0);
            for (int i = 0; i < business.ed.getEmployees().size(); i++){
                if(business.ed.getEmployees().get(i).equals(e)){
                    business.ed.getEmployees().remove(i);
                    i--;
                }
            }
        }else{
            JOptionPane.showMessageDialog(null,"Select a employee!");
        }
        
    }//GEN-LAST:event_DeleteEmployeeButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddTOEmployeeButton;
    private javax.swing.JButton AddToCustomerButton;
    private javax.swing.JTable CustomerTable;
    private javax.swing.JTextField DateOfBirthInputText;
    private javax.swing.JButton DeleteCustomerButton;
    private javax.swing.JButton DeleteEmployeeButton;
    private javax.swing.JTable EmployeeTable;
    private javax.swing.JTextField MarketInputText;
    private javax.swing.JTextField NameInputText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
