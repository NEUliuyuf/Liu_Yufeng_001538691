/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package businessmanagement.userInterface;

import businessmanagement.Business.Business;
import businessmanagement.MarketModel.Market;
import businessmanagement.ProductManagement.Product;
import businessmanagement.ProductManagement.SolutionOffer;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 43999
 */
public class SolutionCatalogPane extends javax.swing.JPanel {

    /**
     * Creates new form SolutionCatalogPane
     */
    Business business;
    SolutionOffer solution;
    public SolutionCatalogPane(Business b) {
        initComponents();
        business = b;
        populateSolutionTable();
        populateProductTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MarketListLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        SolutionTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        ProductTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        CreateSolutionButton = new javax.swing.JButton();
        AddProductButton = new javax.swing.JButton();
        DeleteProductButton = new javax.swing.JButton();
        ViewSolutionButton = new javax.swing.JButton();
        DeleteSolutionButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        SolutionProductTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        SolutionNameInputText = new javax.swing.JTextField();
        SolutionPriceInputText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        SolutionMarketInputText = new javax.swing.JTextField();

        MarketListLabel.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        MarketListLabel.setText("Solution Catalog");

        SolutionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Solution Name", "Price", "Market"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(SolutionTable);
        if (SolutionTable.getColumnModel().getColumnCount() > 0) {
            SolutionTable.getColumnModel().getColumn(1).setHeaderValue("Price");
            SolutionTable.getColumnModel().getColumn(2).setHeaderValue("Market");
        }

        ProductTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "ID", "Unit Price", "Supplier", "Expire Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(ProductTable);

        jLabel2.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N

        CreateSolutionButton.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        CreateSolutionButton.setText("Create a Solution");
        CreateSolutionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateSolutionButtonActionPerformed(evt);
            }
        });

        AddProductButton.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        AddProductButton.setText("Add Product");
        AddProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddProductButtonActionPerformed(evt);
            }
        });

        DeleteProductButton.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        DeleteProductButton.setText("Delete Product");
        DeleteProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteProductButtonActionPerformed(evt);
            }
        });

        ViewSolutionButton.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        ViewSolutionButton.setText("View a Solution");
        ViewSolutionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewSolutionButtonActionPerformed(evt);
            }
        });

        DeleteSolutionButton.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        DeleteSolutionButton.setText("Delete a Solution");
        DeleteSolutionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteSolutionButtonActionPerformed(evt);
            }
        });

        SolutionProductTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "ID", "Supplier"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(SolutionProductTable);

        jLabel3.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel3.setText("Solution Name: ");

        SolutionNameInputText.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        SolutionNameInputText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SolutionNameInputTextActionPerformed(evt);
            }
        });

        SolutionPriceInputText.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        SolutionPriceInputText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SolutionPriceInputTextActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel4.setText("Solution Price: ");

        jLabel5.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel5.setText("Solution Market: ");

        SolutionMarketInputText.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        SolutionMarketInputText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SolutionMarketInputTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(MarketListLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(DeleteProductButton)
                        .addGap(91, 91, 91)
                        .addComponent(AddProductButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 11, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SolutionMarketInputText, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(10, 10, 10)
                                .addComponent(SolutionNameInputText, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(SolutionPriceInputText, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addGap(11, 11, 11))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CreateSolutionButton)
                        .addGap(59, 59, 59)
                        .addComponent(ViewSolutionButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DeleteSolutionButton)
                        .addGap(33, 33, 33))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MarketListLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel2)
                        .addGap(15, 15, 15)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(SolutionNameInputText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(SolutionPriceInputText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(SolutionMarketInputText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CreateSolutionButton)
                    .addComponent(ViewSolutionButton)
                    .addComponent(DeleteSolutionButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeleteProductButton)
                    .addComponent(AddProductButton))
                .addContainerGap(27, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void DeleteProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteProductButtonActionPerformed
        // TODO add your handling code here:
        int solutionRow = SolutionTable.getSelectedRow();
        int ProductRow = SolutionProductTable.getSelectedRow();
        if(solutionRow >= 0 && ProductRow >= 0){
            solution = (SolutionOffer)SolutionTable.getValueAt(solutionRow, 0);
            Product product = (Product)ProductTable.getValueAt(ProductRow, 0);
            solution.deletProduct(product);
            populateSolutionProductTable();
        }else{
            JOptionPane.showMessageDialog(null,"Select a solution or product!");
        }
    }//GEN-LAST:event_DeleteProductButtonActionPerformed

    private void AddProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddProductButtonActionPerformed
        // TODO add your handling code here:
        int solutionRow = SolutionTable.getSelectedRow();
        int ProductRow = ProductTable.getSelectedRow();
        if(solutionRow >= 0 && ProductRow >= 0){
            solution = (SolutionOffer)SolutionTable.getValueAt(solutionRow, 0);
            Product product = (Product)ProductTable.getValueAt(ProductRow, 0);
            solution.addProduct(product);
            populateSolutionProductTable();
        }else{
            JOptionPane.showMessageDialog(null,"Select a solution or product!");
        }
        JOptionPane.showMessageDialog(null,"Add sucessful!");
    }//GEN-LAST:event_AddProductButtonActionPerformed

    private void populateSolutionProductTable(){
        DefaultTableModel dtm = (DefaultTableModel) SolutionProductTable.getModel();
        dtm.setRowCount(0);
        for(Product product :solution.getProductBundle()){
            Object[] row = new Object[3];
            row[0] = product;
            row[1] = product.getId();
            row[2] = product.getSupplier();
            dtm.addRow(row);
        }
    }
    private void SolutionNameInputTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SolutionNameInputTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SolutionNameInputTextActionPerformed

    private void SolutionPriceInputTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SolutionPriceInputTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SolutionPriceInputTextActionPerformed

    private void SolutionMarketInputTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SolutionMarketInputTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SolutionMarketInputTextActionPerformed

    private void CreateSolutionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateSolutionButtonActionPerformed
        // TODO add your handling code here:
        String name = SolutionNameInputText.getText();
        String marketStr = SolutionMarketInputText.getText();
        String priceStr = SolutionPriceInputText.getText();
        
        if(name.isEmpty() == false && marketStr.isEmpty() == false){
            Market market = business.ml.searchMarket(marketStr);
            if (market != null){
                try{
                    Double price = Double.parseDouble(priceStr);
                    SolutionOffer solutionOffer = new SolutionOffer(name,price,market);
                    business.sc.addSolution(solutionOffer);
                    JOptionPane.showMessageDialog(null,"Create sucessful!");
                }catch(NumberFormatException e){
                    JOptionPane.showMessageDialog(null,"Price must be number only!");
                }
            }else{
                JOptionPane.showMessageDialog(null,"Market does not exsit!");
            }
        }else{
            JOptionPane.showMessageDialog(null,"Input solution name and market name!");
        }
        
        populateSolutionTable();
    }//GEN-LAST:event_CreateSolutionButtonActionPerformed

    private void ViewSolutionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewSolutionButtonActionPerformed
        // TODO add your handling code here:
        int solutionRow = SolutionTable.getSelectedRow();
        solution = (SolutionOffer) SolutionTable.getValueAt(solutionRow, 0);
        populateSolutionProductTable();
    }//GEN-LAST:event_ViewSolutionButtonActionPerformed

    private void DeleteSolutionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteSolutionButtonActionPerformed
        // TODO add your handling code here:
        int solutionRow = SolutionTable.getSelectedRow();
        solution = (SolutionOffer) SolutionTable.getValueAt(solutionRow, 0);
        business.sc.deleteSolution(solution);
        populateSolutionTable();
        SolutionProductTable.removeAll();
    }//GEN-LAST:event_DeleteSolutionButtonActionPerformed

    private void populateSolutionTable(){
        DefaultTableModel dtm = (DefaultTableModel) SolutionTable.getModel();
        dtm.setRowCount(0);
        for(SolutionOffer solution : business.sc.getSolutionOfferList()){
            Object[] row = new Object[3];
            row[0] = solution;
            row[1] = solution.getPrice();
            row[2] = solution.getMarket();
            dtm.addRow(row);
            
        }
        
    }
    
    private void populateProductTable(){
        DefaultTableModel dtm = (DefaultTableModel) ProductTable.getModel();
        dtm.setRowCount(0);
        for(Product product : business.pc.getProductCatalog()){
            Object[] row = new Object[5];
            row[0] = product;
            row[1] = product.getId();
            row[2] = product.getPrice();
            row[3] = product.getSupplier();
            row[4] = product.getExpireDate();
            dtm.addRow(row);
            
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddProductButton;
    private javax.swing.JButton CreateSolutionButton;
    private javax.swing.JButton DeleteProductButton;
    private javax.swing.JButton DeleteSolutionButton;
    private javax.swing.JLabel MarketListLabel;
    private javax.swing.JTable ProductTable;
    private javax.swing.JTextField SolutionMarketInputText;
    private javax.swing.JTextField SolutionNameInputText;
    private javax.swing.JTextField SolutionPriceInputText;
    private javax.swing.JTable SolutionProductTable;
    private javax.swing.JTable SolutionTable;
    private javax.swing.JButton ViewSolutionButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
