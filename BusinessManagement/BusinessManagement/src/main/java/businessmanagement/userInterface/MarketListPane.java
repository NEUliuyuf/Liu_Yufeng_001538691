/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package businessmanagement.userInterface;

import businessmanagement.Business.Business;
import businessmanagement.MarketModel.Market;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 43999
 */
public class MarketListPane extends javax.swing.JPanel {

    /**
     * Creates new form MarketListPane
     */
    Business business;
    public MarketListPane(Business b) {
        initComponents();
        business = b;
        Populate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        RightPane = new javax.swing.JPanel();
        MarketListLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        MarketTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        MarketNameText = new javax.swing.JTextField();
        MarketAddButton = new javax.swing.JButton();
        MarketSearchButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        MarketSearchText = new javax.swing.JTextField();
        MarketDeleteButton1 = new javax.swing.JButton();
        MarketRefreshButton1 = new javax.swing.JButton();

        MarketListLabel.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        MarketListLabel.setText("Market List");

        MarketTable.setAutoCreateRowSorter(true);
        MarketTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "Market Area", "Number of Customers"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        MarketTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(MarketTable);

        jLabel1.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jLabel1.setText("Add a Market(input city): ");

        MarketNameText.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        MarketNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarketNameTextActionPerformed(evt);
            }
        });

        MarketAddButton.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        MarketAddButton.setText("Add");
        MarketAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarketAddButtonActionPerformed(evt);
            }
        });

        MarketSearchButton.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        MarketSearchButton.setText("Search");
        MarketSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarketSearchButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jLabel2.setText("Search a Market(input city): ");

        MarketSearchText.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        MarketSearchText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarketSearchTextActionPerformed(evt);
            }
        });

        MarketDeleteButton1.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        MarketDeleteButton1.setText("Delete");
        MarketDeleteButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarketDeleteButton1ActionPerformed(evt);
            }
        });

        MarketRefreshButton1.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        MarketRefreshButton1.setText("Refresh");
        MarketRefreshButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarketRefreshButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RightPaneLayout = new javax.swing.GroupLayout(RightPane);
        RightPane.setLayout(RightPaneLayout);
        RightPaneLayout.setHorizontalGroup(
            RightPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RightPaneLayout.createSequentialGroup()
                .addGroup(RightPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RightPaneLayout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(RightPaneLayout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addComponent(MarketListLabel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(RightPaneLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(MarketRefreshButton1)
                .addGap(29, 29, 29)
                .addComponent(MarketSearchButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(MarketDeleteButton1)
                .addGap(32, 32, 32)
                .addComponent(MarketAddButton)
                .addGap(63, 63, 63))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RightPaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(RightPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(RightPaneLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, 0)
                        .addComponent(MarketSearchText, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(RightPaneLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(MarketNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(73, 73, 73))
        );
        RightPaneLayout.setVerticalGroup(
            RightPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RightPaneLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(MarketListLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(RightPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(MarketNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(RightPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(MarketSearchText, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(87, 87, 87)
                .addGroup(RightPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MarketAddButton)
                    .addComponent(MarketDeleteButton1)
                    .addComponent(MarketSearchButton)
                    .addComponent(MarketRefreshButton1))
                .addGap(55, 55, 55))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 587, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(RightPane, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 506, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(RightPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void MarketNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarketNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MarketNameTextActionPerformed

    private void MarketAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarketAddButtonActionPerformed
        // TODO add your handling code here:
        String marketName = MarketNameText.getText();
        if(marketName.isEmpty() == false){
            Market m = new Market(marketName);
            business.ml.addMarket(m);
            JOptionPane.showMessageDialog(null,"Add Successful");
            Populate();
        }

    }//GEN-LAST:event_MarketAddButtonActionPerformed

    private void MarketSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarketSearchButtonActionPerformed
        // TODO add your handling code here:
        String search = MarketSearchText.getText();
        if(search != null){
            Market m = business.ml.searchMarket(search);
            if(m != null){
                DefaultTableModel dtm = (DefaultTableModel) MarketTable.getModel();
                dtm.setRowCount(0);
                Object[] row = new Object[2];
                row[0] = m;
                row[1] = m.getNumberOfPeople();
                dtm.addRow(row);
            }
        }
    }//GEN-LAST:event_MarketSearchButtonActionPerformed

    private void MarketSearchTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarketSearchTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MarketSearchTextActionPerformed

    private void Populate(){
        DefaultTableModel dtm = (DefaultTableModel) MarketTable.getModel();
        dtm.setRowCount(0);
        for(Market market : business.ml.getMarketList()){
            Object[] row = new Object[2];
            row[0] = market;
            row[1] = market.getNumberOfPeople();
            dtm.addRow(row);
            
        }
    }
    private void MarketDeleteButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarketDeleteButton1ActionPerformed
        // TODO add your handling code here:
        int row = MarketTable.getSelectedRow();
        if(row >= 0){
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete " +(Market)MarketTable.getValueAt(row, 0) + " area?","Warning",dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION){
                business.ml.DeleteMarket((Market)MarketTable.getValueAt(row, 0));
                Populate();
            }
        }else{
            JOptionPane.showMessageDialog(null,"Select a row!");
        }
    }//GEN-LAST:event_MarketDeleteButton1ActionPerformed

    private void MarketRefreshButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarketRefreshButton1ActionPerformed
        // TODO add your handling code here:
        Populate();
    }//GEN-LAST:event_MarketRefreshButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton MarketAddButton;
    private javax.swing.JButton MarketDeleteButton1;
    private javax.swing.JLabel MarketListLabel;
    private javax.swing.JTextField MarketNameText;
    private javax.swing.JButton MarketRefreshButton1;
    private javax.swing.JButton MarketSearchButton;
    private javax.swing.JTextField MarketSearchText;
    private javax.swing.JTable MarketTable;
    private javax.swing.JPanel RightPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
