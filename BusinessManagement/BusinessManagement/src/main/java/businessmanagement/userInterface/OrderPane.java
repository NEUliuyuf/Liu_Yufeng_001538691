/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package businessmanagement.userInterface;

import businessmanagement.Business.Business;
import businessmanagement.CustomerManagement.CustomerProfile;
import businessmanagement.MarketModel.Channel;
import businessmanagement.MarketModel.Market;
import businessmanagement.OrderManagement.Order;
import businessmanagement.ProductManagement.Product;
import businessmanagement.ProductManagement.SolutionOffer;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 43999
 */
public class OrderPane extends javax.swing.JPanel {

    /**
     * Creates new form OrderPane
     */
    Business business;
    public OrderPane(Business b) {
        initComponents();
        business = b;
        populateChannel();
        populateCustomer();
        populateProduct();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        OrderButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ChannelTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        CustomerTable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        ProductTable = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        BundleTable = new javax.swing.JTable();
        ShowBundleButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jLabel1.setText("Order");

        jLabel3.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel3.setText("Channel:");

        jLabel4.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel4.setText("Customer:");

        jLabel5.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel5.setText("Product:");

        jLabel6.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel6.setText("Bundle:");

        OrderButton.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        OrderButton.setText("Order");
        OrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrderButtonActionPerformed(evt);
            }
        });

        ChannelTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Channel"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(ChannelTable);

        CustomerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(CustomerTable);

        ProductTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Price", "ProductID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(ProductTable);

        BundleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bundle", "Price", "Market"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(BundleTable);

        ShowBundleButton.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        ShowBundleButton.setText("Show bundle for customer");
        ShowBundleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowBundleButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(258, 258, 258)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addGap(175, 175, 175))
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))))
                .addContainerGap(35, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ShowBundleButton)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(OrderButton)))
                .addGap(164, 164, 164))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(OrderButton)
                .addGap(18, 18, 18)
                .addComponent(ShowBundleButton)
                .addGap(41, 41, 41))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void OrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrderButtonActionPerformed
        // TODO add your handling code here:
        int channelRow = ChannelTable.getSelectedRow();
        int customerRow = CustomerTable.getSelectedRow();
        int productRow = ProductTable.getSelectedRow();
        int bundleRow = BundleTable.getSelectedRow();
        boolean isBundle = false;
        boolean isProduct = false;
        if(productRow >= 0){
            isProduct = true;
        }
        if(bundleRow >= 0){
            isBundle = true;
        }
        
        if(channelRow >= 0 && customerRow >= 0 && (productRow >= 0 || bundleRow >= 0)){
            Channel channel = (Channel) ChannelTable.getValueAt(channelRow, 0);
            CustomerProfile customer = (CustomerProfile) CustomerTable.getValueAt(customerRow, 0);
            if(isBundle == true && isProduct == true){
                Product product = (Product) ProductTable.getValueAt(productRow, 0);
                SolutionOffer solution = (SolutionOffer) BundleTable.getValueAt(bundleRow,0);
                
                Order order1 = new Order(customer.getMarket(),channel,customer,product,null);
                
                Order order2 = new Order(customer.getMarket(),channel,customer,null,solution);
                
                business.mo.addOrder(order1);
                business.mo.addOrder(order2);
                business.cd.searchCustomerByID(customer.getCustomerID()).getOrderList().addOrder(order1);
                business.cd.searchCustomerByID(customer.getCustomerID()).getOrderList().addOrder(order2);
                JOptionPane.showMessageDialog(null,"Order sucessful! Order Number:" + order1.getNumber() + " and " + order2.getNumber());
                
                
            }else if(isBundle == true && isProduct == false){
                SolutionOffer solution = (SolutionOffer) BundleTable.getValueAt(bundleRow,0);
                Order order = new Order(customer.getMarket(),channel,customer,null,solution);
                business.mo.addOrder(order);
                business.cd.searchCustomerByID(customer.getCustomerID()).getOrderList().addOrder(order);
                JOptionPane.showMessageDialog(null,"Order sucessful! Order Number:" + order.getNumber());
            }else if(isBundle == false && isProduct == true){
                Product product = (Product) ProductTable.getValueAt(productRow, 0);
                Order order = new Order(customer.getMarket(),channel,customer,product,null);
                business.mo.addOrder(order);
                business.cd.searchCustomerByID(customer.getCustomerID()).getOrderList().addOrder(order);
                JOptionPane.showMessageDialog(null,"Order sucessful! Order Number:" + order.getNumber());
            }
        }else{
            JOptionPane.showMessageDialog(null,"Select at least market,channel, customer and product to save the order");
        }
        
    }//GEN-LAST:event_OrderButtonActionPerformed

    private void ShowBundleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowBundleButtonActionPerformed
        // TODO add your handling code here:
        int customerRow = CustomerTable.getSelectedRow();
        if(customerRow >= 0){
            CustomerProfile customer = (CustomerProfile) CustomerTable.getValueAt(customerRow, 0);
            DefaultTableModel dtm = (DefaultTableModel) BundleTable.getModel();
            dtm.setRowCount(0);
            for(SolutionOffer so : business.sc.getSolutionOfferList()){
                if(so.getMarket().equals(customer.getMarket())){
                    Object[] row = new Object[3];
                    row[0] = so;
                    row[1] = so.getPrice();
                    row[2] = so.getMarket();
                    dtm.addRow(row);
                }
            }
        }else{
            JOptionPane.showMessageDialog(null,"Select a customer!");
        }
    }//GEN-LAST:event_ShowBundleButtonActionPerformed

    
    private void populateChannel(){
        DefaultTableModel dtm = (DefaultTableModel) ChannelTable.getModel();
        dtm.setRowCount(0);
        for(Channel channel : business.cl.getChannelList()){
            Object[] row = new Object[1];
            row[0] = channel;
            dtm.addRow(row);
        }
    }
    
    private void populateCustomer(){
        DefaultTableModel dtm = (DefaultTableModel) CustomerTable.getModel();
        dtm.setRowCount(0);
        for(CustomerProfile cp : business.getCd().getCustomers()){
            Object[] row = new Object[2];
            row[0] = cp;
            row[1] = cp.getCustomerID();
            dtm.addRow(row);
            
        }
    }
    
    private void populateProduct(){
        DefaultTableModel dtm = (DefaultTableModel) ProductTable.getModel();
        dtm.setRowCount(0);
        for(Product product : business.pc.getProductCatalog()){
            Object[] row = new Object[3];
            row[0] = product;
            row[1] = product.getPrice();
            row[2] = product.getId();
            dtm.addRow(row);
        }
    }
    
    private void populateBundle(){
        DefaultTableModel dtm = (DefaultTableModel) BundleTable.getModel();
        dtm.setRowCount(0);
        for(SolutionOffer so : business.sc.getSolutionOfferList()){
            Object[] row = new Object[3];
            row[0] = so;
            row[1] = so.getPrice();
            row[2] = so.getMarket();
            dtm.addRow(row);
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BundleTable;
    private javax.swing.JTable ChannelTable;
    private javax.swing.JTable CustomerTable;
    private javax.swing.JButton OrderButton;
    private javax.swing.JTable ProductTable;
    private javax.swing.JButton ShowBundleButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    // End of variables declaration//GEN-END:variables
}
