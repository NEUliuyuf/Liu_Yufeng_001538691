/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package businessmanagement.userInterface;

import businessmanagement.Business.Business;
import businessmanagement.CustomerManagement.CustomerProfile;
import businessmanagement.OrderManagement.Order;
import businessmanagement.ProductManagement.Product;
import businessmanagement.ProductManagement.SolutionOffer;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 43999
 */
public class MyOrdersPane extends javax.swing.JPanel {

    /**
     * Creates new form MyOrdersPane
     */
    Business business;
    CustomerProfile customer;
    public MyOrdersPane(Business b, CustomerProfile cp) {
        initComponents();
        business = b;
        customer = cp;
        populateOrderListTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        BundleProductTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        OrderListTable = new javax.swing.JTable();
        CancelOrderBuntton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jLabel1.setText("My Orders");

        BundleProductTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Unit Price", "Used By", "Supplier"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(BundleProductTable);

        jLabel2.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel2.setText("Bundle Details:");

        OrderListTable.setAutoCreateRowSorter(true);
        OrderListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order Number", "Purchased", "Price", "Is Bundle"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        OrderListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                OrderListTableMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(OrderListTable);
        if (OrderListTable.getColumnModel().getColumnCount() > 0) {
            OrderListTable.getColumnModel().getColumn(3).setHeaderValue("Is Bundle");
        }

        CancelOrderBuntton.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        CancelOrderBuntton.setText("Cancel Order");
        CancelOrderBuntton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelOrderBunttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 567, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(233, 233, 233))))
            .addGroup(layout.createSequentialGroup()
                .addGap(208, 208, 208)
                .addComponent(CancelOrderBuntton)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 567, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(193, 193, 193)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(CancelOrderBuntton)
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(55, 55, 55)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(280, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void OrderListTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrderListTableMousePressed
        // TODO add your handling code here:
        int row = OrderListTable.getSelectedRow();
        if(row >= 0){
            Order order =(Order)OrderListTable.getValueAt(row, 0);
            if(order.getSolutionOffer() != null){
                populateBundleProductTable(order.getSolutionOffer());
            }else{
                DefaultTableModel dtm = (DefaultTableModel) BundleProductTable.getModel();
                dtm.setRowCount(0);
                
                
            }
        }
    }//GEN-LAST:event_OrderListTableMousePressed

    private void CancelOrderBunttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelOrderBunttonActionPerformed
        // TODO add your handling code here:
        int row = OrderListTable.getSelectedRow();
        if(row >= 0){
            int result = JOptionPane.showConfirmDialog(this,"Are you sure want to cancel order?", "Swing Tester",
               JOptionPane.YES_NO_OPTION,
               JOptionPane.QUESTION_MESSAGE);
            if(result == JOptionPane.YES_OPTION){
                Order order = (Order) OrderListTable.getValueAt(row, 0);
                CustomerProfile cp = order.getCustomerProfile();
                business.mo.deletOrder(order);
                cp.getOrderList().deletOrder(order);
                populateOrderListTable();
                JOptionPane.showMessageDialog(null, "You have successfully cancel the order " + order.getNumber());
            }
            populateOrderListTable();
            
        }
        
    }//GEN-LAST:event_CancelOrderBunttonActionPerformed

    private void populateOrderListTable(){
        DefaultTableModel dtm = (DefaultTableModel) OrderListTable.getModel();
        dtm.setRowCount(0);
        for(Order o : customer.getOrderList().getOrderList()){
            Object[] row = new Object[4];
            row[0] = o;
            if(o.getSolutionOffer() != null){
                row[1] = o.getSolutionOffer();
                row[2] = o.getSolutionOffer().getPrice();
                row[3] = "True";
            }else{
                row[1] = o.getProduct();
                row[2] = o.getProduct().getPrice();
                row[3] = "False";
            }
            
            dtm.addRow(row);
            
        }
    }
    private void populateBundleProductTable(SolutionOffer so){
        DefaultTableModel dtm = (DefaultTableModel) BundleProductTable.getModel();
        dtm.setRowCount(0);
        for(Product p : so.getProductBundle()){
            Object[] row = new Object[4];
            row[0] = p;
            row[1] = p.getPrice();
            row[2] = p.getExpireDate();
            row[3] = p.getSupplier();
            dtm.addRow(row);
            
        }
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BundleProductTable;
    private javax.swing.JButton CancelOrderBuntton;
    private javax.swing.JTable OrderListTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
