/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package businessmanagement.userInterface;

import businessmanagement.Business.Business;
import businessmanagement.CustomerManagement.CustomerProfile;
import businessmanagement.MarketModel.Channel;
import businessmanagement.OrderManagement.Order;
import businessmanagement.ProductManagement.Product;
import businessmanagement.ProductManagement.SolutionOffer;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 43999
 */
public class CartPane extends javax.swing.JPanel {

    /**
     * Creates new form CartPane
     */
    Business business;
    CustomerProfile customer;
    public CartPane(Business b, CustomerProfile cp) {
        initComponents();
        business = b;
        customer = cp;
        populateProductTable();
        populateBundleTable();
        BundleProductTable.getSelectedRow();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ProductTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        BundleTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        BundleProductTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        BuyButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jLabel1.setText("Cart");

        jLabel2.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel2.setText("Product in your cart:");

        ProductTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Supplier", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ProductTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ProductTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ProductTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(ProductTable);
        if (ProductTable.getColumnModel().getColumnCount() > 0) {
            ProductTable.getColumnModel().getColumn(1).setHeaderValue("Supplier");
        }

        jLabel3.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel3.setText("Bundles in your cart:");

        BundleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Products", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        BundleTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        BundleTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BundleTableMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BundleTableMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(BundleTable);

        BundleProductTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Unit Price", "Supplier"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        BundleProductTable.setRowSelectionAllowed(false);
        BundleProductTable.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                BundleProductTableComponentAdded(evt);
            }
        });
        jScrollPane3.setViewportView(BundleProductTable);

        jLabel4.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel4.setText("Products in bundle:");

        BuyButton.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        BuyButton.setText("Buy");
        BuyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuyButtonActionPerformed(evt);
            }
        });

        DeleteButton.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(252, 252, 252)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(60, 60, 60)
                                        .addComponent(DeleteButton)))
                                .addGap(74, 74, 74)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(BuyButton)
                                        .addGap(73, 73, 73)))))))
                .addGap(52, 52, 52))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BuyButton)
                    .addComponent(DeleteButton))
                .addGap(24, 24, 24))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BuyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuyButtonActionPerformed
        // TODO add your handling code here:
        int productRow = ProductTable.getSelectedRow();
        int bundleRow = BundleTable.getSelectedRow();
        if(productRow >= 0){
            Product product = (Product) ProductTable.getValueAt(productRow, 0);
            Channel channel = business.getCl().searchChannel("Offical website");
            Order order = new Order(customer.getMarket(),channel,customer,product,null);
            business.mo.addOrder(order);
            customer.getOrderList().addOrder(order);
            JOptionPane.showMessageDialog(null,"You have successfully purchased " + product + ", your order number is: " + order.getNumber() + ".");
        }
        if(bundleRow >= 0){
            SolutionOffer bundle = (SolutionOffer) BundleTable.getValueAt(bundleRow, 0);
            Channel channel = business.getCl().searchChannel("Offical website");
            Order order = new Order(customer.getMarket(),channel,customer,null,bundle);
            business.mo.addOrder(order);
            customer.getOrderList().addOrder(order);
            JOptionPane.showMessageDialog(null,"You have successfully purchased " + bundle.getName() + ", your order number is: " + order.getNumber() + ".");
        }
        delete(false);
        populateBundleTable();
        populateProductTable();
    }//GEN-LAST:event_BuyButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
        delete(true);
    }//GEN-LAST:event_DeleteButtonActionPerformed

    
    private void delete(boolean showMessage){
        int productRow = ProductTable.getSelectedRow();
        int bundleRow = BundleTable.getSelectedRow();
        if(productRow >= 0){
            Product product = (Product) ProductTable.getValueAt(productRow, 0);
            customer.getCart().deleteProduct(product);
            if(showMessage == true){
                JOptionPane.showMessageDialog(null,"You have successfully delete " + product + " in your cart!");
            }
        }
        if(bundleRow >= 0){
            SolutionOffer bundle = (SolutionOffer) BundleTable.getValueAt(bundleRow, 0);
            customer.getCart().deleteBundle(bundle);
            if(showMessage == true){
                JOptionPane.showMessageDialog(null,"You have successfully delete " + bundle + " in your cart!");
            }
        }
        populateBundleTable();
        populateProductTable();
    }
    private void BundleProductTableComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_BundleProductTableComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_BundleProductTableComponentAdded

    private void BundleTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BundleTableMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_BundleTableMouseClicked

    private void BundleTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BundleTableMousePressed
        // TODO add your handling code here:
        int row = BundleTable.getSelectedRow();
        SolutionOffer s = (SolutionOffer)BundleTable.getValueAt(row, 0);
        populateBundleProductTable(s);
        populateProductTable();
    }//GEN-LAST:event_BundleTableMousePressed

    private void ProductTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductTableMousePressed
        // TODO add your handling code here:
        populateBundleTable();
    }//GEN-LAST:event_ProductTableMousePressed


    private void populateProductTable(){
        DefaultTableModel dtm = (DefaultTableModel) ProductTable.getModel();
        dtm.setRowCount(0);
        for(Product product : customer.getCart().getProducts()){
            Object[] row = new Object[3];
            row[0] = product;
            row[1] = product.getSupplier();
            row[2] = product.getPrice();
            dtm.addRow(row);
            
        }
    }
    
    private void populateBundleTable(){
        DefaultTableModel dtm = (DefaultTableModel) BundleTable.getModel();
        dtm.setRowCount(0);
        for(SolutionOffer so : customer.getCart().getBundles()){
            Object[] row = new Object[2];
            row[0] = so;
            row[1] = so.getPrice();
            dtm.addRow(row);
            
        }
    }
    
    private void populateBundleProductTable(SolutionOffer s){
        DefaultTableModel dtm = (DefaultTableModel) BundleProductTable.getModel();
        dtm.setRowCount(0);
        for(Product p : s.getProductBundle()){
            Object[] row = new Object[3];
            row[0] = p;
            row[1] = p.getPrice();
            row[2] = p.getSupplier();
            dtm.addRow(row);
            
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BundleProductTable;
    private javax.swing.JTable BundleTable;
    private javax.swing.JButton BuyButton;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JTable ProductTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
